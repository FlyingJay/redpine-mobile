// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "28.0.3"
        minSdkVersion = 19
        compileSdkVersion = 28
        targetSdkVersion = 27
        supportLibVersion = "28.0.0"
    }
    repositories {
        google()
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.google.gms:google-services:3.2.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        maven { url 'https://jitpack.io' }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
    distributionUrl = distributionUrl.replace("bin", "all")
}

subprojects { subproject ->
    afterEvaluate {
        if ((subproject.plugins.hasPlugin('android') || subproject.plugins.hasPlugin('android-library'))) {
            android {
                variantFilter { variant ->
                    def names = variant.flavors*.name
                    if (names.contains("reactNative51") || names.contains("reactNative55")) {
                        setIgnore(true)
                    }
                }
            }
        }
    }
    project.configurations.all {
        resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.android.support'
                && !details.requested.name.contains('support-media-compat') ) {
                details.useVersion "28.0.0"
            }

            if (details.requested.group == 'androidx.slidingpanelayout') {
                if (details.requested.name.contains('slidingpanelayout') ) {
                   details.useVersion "1.0.0"
                }
            }

            if (details.requested.group == 'androidx.loader') {
                if (details.requested.name.contains('loader') ) {
                   details.useVersion "1.0.0"
                }
            }

            if (details.requested.group == 'androidx.interpolator') {
                if (details.requested.name.contains('interpolator') ) {
                   details.useVersion "1.0.0"
                }
            }

            if (details.requested.group == 'com.google.android.gms') {
                if (details.requested.name.contains('play-services-basement') ) {
                   details.useVersion "17.0.0"
                }

                if (details.requested.name.contains('play-services-stats') ) {
                   details.useVersion "17.0.0"
                }

                if (details.requested.name.contains('play-services-tasks') ) {
                   details.useVersion "17.0.0"
                }

                if (details.requested.name.contains('play-services-base') ) {
                   details.useVersion "17.0.0"
                }
            }
        }
    }
}
